from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.feature_selection import RFE
from sklearn.metrics import accuracy_score

# Define the target variable and feature set
target_column = 'RFS'  # Set 'RFS' as the target variable
X = df.drop(columns=['PatientID', target_column])  # Features
y = df[target_column]  # Target variable

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Perform feature selection using Recursive Feature Elimination (RFE) with a Random Forest model
model = RandomForestClassifier(random_state=42)
rfe = RFE(estimator=model, n_features_to_select=10)  # Adjust the number of features to select as needed
X_train_rfe = rfe.fit_transform(X_train, y_train)
X_test_rfe = rfe.transform(X_test)

# Evaluate the selected features
selected_features = X.columns[rfe.support_]
print("Selected Features:")
print(selected_features)

# Train and evaluate the model with the selected features
model.fit(X_train_rfe, y_train)
y_pred = model.predict(X_test_rfe)
accuracy = accuracy_score(y_test, y_pred)
print(f"Model Accuracy with Selected Features: {accuracy:.2f}")

# Save the dataset with selected features
selected_df = df[['PatientID', target_column] + list(selected_features)]
selected_df.to_csv('All_PET_Selected.csv', index=False)
